#!/bin/bash

# 2021-04-08 - After Ookla changed their license to move toward a pay-for-use speedtest service,
#              I wrote this script to replace it. This outputs the same data, parsed from fast.com
#                                                                    - Robbie // The Bald Nerd

if [ $(dpkg-query -W -f='${Status}' npm 2>/dev/null | grep -c "ok installed") -eq 0 ]; then
  echo "NOT INSTALLED"
  exit
fi
if [ `npm list -g | grep -c nems-speedtest` -eq 0 ]; then
  echo "NOT INSTALLED"
  exit
fi
if [[ ! -e /usr/local/bin/fast ]]; then
  echo "NOT INSTALLED"
  exit
fi

for pid in $(pidof -x speedtest); do
  if [ $pid != $$ ]; then
    >&2 echo "Already running."
    if [[ -e /tmp/speedtest-fast.log ]]; then
      >&2 echo "Loading cache."
      speedresult=$(cat /tmp/speedtest-fast.log)
      pingresult=$(ping -qc1 fast.com 2>&1 | awk -F'/' 'END{ print (/^rtt/? "OK "$5" ms":"FAIL") }')

      array=($speedresult $pingresult)

      echo ${array[5]} # ping
      echo ${array[6]} # pingUOM
      echo ${array[0]} # download
      echo ${array[1]} # downloadUOM
      echo ${array[2]} # upload
      echo ${array[3]} # uploadUOM
      exit 0
    else
     # If seeing this, it should mean you have multiple copies of speedtest running, but no cache file yet
      echo "NOT RESPONDING"
      >&2 echo "Cache not found."
      exit 1
    fi
  fi
done

# Create a backup of the current log before starting to output. Will be used as cache for subsequent runs.
cp /var/log/nems/speedtest-fast.log /tmp/speedtest-fast.log

/usr/local/bin/fast -u > /var/log/nems/speedtest-fast.log &

# Wait for 100 seconds before forcibly proceeding
# Nagios timeout for service should be 120 or more.
sleep 100
killall -9 fast > /dev/null 2>&1
killall -9 chromium-browser > /dev/null 2>&1
killall -9 chromium > /dev/null 2>&1
if grep -q Mbps "/var/log/nems/speedtest-fast.log"; then
  speedresult=$(cat /var/log/nems/speedtest-fast.log)
else
  speedresult="0 Error
0 Error"
fi

pingresult=$(ping -qc1 fast.com 2>&1 | awk -F'/' 'END{ print (/^rtt/? "OK "$5" ms":"FAIL") }')

array=($speedresult $pingresult)

echo ${array[5]} # ping
echo ${array[6]} # pingUOM
echo ${array[0]} # download
echo ${array[1]} # downloadUOM
echo ${array[2]} # upload
echo ${array[3]} # uploadUOM
